name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Backend Tests
  backend-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run backend tests
        working-directory: ./backend
        run: npm test

  # Frontend Tests
  frontend-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test

  # Lint Check
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install ESLint
        run: npm install -g eslint

      - name: Lint backend
        working-directory: ./backend
        run: |
          npm ci
          eslint . --ext .js

      - name: Lint frontend
        working-directory: ./frontend
        run: |
          npm ci
          eslint . --ext .js,.jsx

  # Build
  build:
    needs: [backend-test, frontend-test, lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Build backend
        working-directory: ./backend
        run: |
          npm ci
          npm run build --if-present

      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

  # Deploy (Mock for educational purposes)
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Vercel (Frontend)
        run: echo "Deploying frontend to Vercel..."

      - name: Deploy to Render (Backend)
        run: echo "Deploying backend to Render..."

      - name: Deploy to MongoDB Atlas
        run: echo "Connecting to MongoDB Atlas..."
